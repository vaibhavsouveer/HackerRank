import java.io.*;
import java.math.*;
import java.security.*;
import java.text.*;
import java.util.*;
import java.util.concurrent.*;
import java.util.regex.*;

public class Solution {

    // Complete the countingValleys function below.
    static int countingValleys(int n, String s) {
        char[] ch = s.toCharArray();
        int h = 0;
        int valleys = 0;
        for(int i = 0; i < ch.length; i++) {
            if(ch[i] == 'U') {
                h++;
                //INCREMENT VALLEY ONLY IF WE HAVE REACHED SEA LEVEL I.E. H =0
                //FROM BELOW I.E. CH[I] = U. IF CH[I] = D, WE HAVE REACHED H = 0
                //FROM ABOVE AND SO IT IS A MOUNTAIN NOT A VALLEY.
                if(h == 0) valleys++;
            }
            else h--;
        }
        return valleys;

    }

    private static final Scanner scanner = new Scanner(System.in);

    public static void main(String[] args) throws IOException {
        BufferedWriter bufferedWriter = new BufferedWriter(new FileWriter(System.getenv("OUTPUT_PATH")));

        int n = scanner.nextInt();
        scanner.skip("(\r\n|[\n\r\u2028\u2029\u0085])?");

        String s = scanner.nextLine();

        int result = countingValleys(n, s);

        bufferedWriter.write(String.valueOf(result));
        bufferedWriter.newLine();

        bufferedWriter.close();

        scanner.close();
    }
}
