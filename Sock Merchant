import java.io.*;
import java.math.*;
import java.security.*;
import java.text.*;
import java.util.*;
import java.util.concurrent.*;
import java.util.regex.*;

public class Solution {

    // Complete the sockMerchant function below.
    static int sockMerchant(int n, int[] arr) {
        Map<Integer, Integer> m = new HashMap<Integer, Integer>();
        for(int x : arr) {
            if(m.containsKey(x)) {
                int value = m.get(x) + 1;
                m.put(x, value);
            }
            else m.put(x, 1);
        }
        //CHECK THE MAP CREATED.
        System.out.println("Checking map created.");
        System.out.println(m);
        //TRAVERSE ALL ENTRIES IN MAP AND FIND THE VALUES AND CHECK
        //PAIRS FOR EACH VALUE.
        Set key = m.keySet();
        Iterator itr = key.iterator();
        int val = 0;
        while(itr.hasNext()) {
            val = (m.get(itr.next())) / 2 + val;
        }
        return val;
    }

    private static final Scanner scanner = new Scanner(System.in);

    public static void main(String[] args) throws IOException {
        BufferedWriter bufferedWriter = new BufferedWriter(new FileWriter(System.getenv("OUTPUT_PATH")));

        int n = scanner.nextInt();
        scanner.skip("(\r\n|[\n\r\u2028\u2029\u0085])?");

        int[] ar = new int[n];

        String[] arItems = scanner.nextLine().split(" ");
        scanner.skip("(\r\n|[\n\r\u2028\u2029\u0085])?");

        for (int i = 0; i < n; i++) {
            int arItem = Integer.parseInt(arItems[i]);
            ar[i] = arItem;
        }

        int result = sockMerchant(n, ar);

        bufferedWriter.write(String.valueOf(result));
        bufferedWriter.newLine();

        bufferedWriter.close();

        scanner.close();
    }
}
